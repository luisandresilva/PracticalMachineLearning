setwd("~/PracticalMachineLearning")
knitr::opts_chunk$set(echo = TRUE)
if (!file.exists("pml-training.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
dest="pml-training.csv", mode="wb")
}
if (!file.exists("pml-testing.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
dest="pml-testing.csv", mode="wb")
}
set.seed(1969)
training <- read.csv('pml-training.csv')
testing <- read.csv('pml-testing.csv')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
for(i in 1:ncol(training)){
if (class(training[,i])!="factor") {
training[is.na(training[,i]), i] <- mean(training[,i], na.rm = TRUE)
} else {
training[is.na(training[,i]), i] <- Mode(training[,i])
}
}
for(i in 1:ncol(testing)){
if (class(testing[,i])!="factor") {
testing[is.na(testing[,i]), i] <- mean(testing[,i], na.rm = TRUE)
} else {
testing[is.na(testing[,i]), i] <- Mode(testing[,i])
}
}
knitr::opts_chunk$set(echo = TRUE)
if (!file.exists("pml-training.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
dest="pml-training.csv", mode="wb")
}
if (!file.exists("pml-testing.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
dest="pml-testing.csv", mode="wb")
}
set.seed(1969)
training <- read.csv('pml-training.csv')
testing <- read.csv('pml-testing.csv')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
for(i in 1:ncol(training)){
if (class(training[,i])!="factor") {
training[is.na(training[,i]), i] <- mean(training[,i], na.rm = TRUE)
} else {
training[is.na(training[,i]), i] <- Mode(training[,i])
}
}
for(i in 1:ncol(testing)){
if (class(testing[,i])!="factor") {
testing[is.na(testing[,i]), i] <- mean(testing[,i], na.rm = TRUE)
} else {
testing[is.na(testing[,i]), i] <- Mode(testing[,i])
}
}
sub_training <- training[,grep("^classe|X|gyros|accel.*",names(training))]
sub_testing <- testing[,grep("^classe|X|gyros|accel.*",names(testing))]
sub_training <- sample(training[,grep("^classe|X|gyros|accel.*",names(training))],2000)
sub_training <- training[,grep("^classe|X|gyros|accel.*",names(training))]
sub_training <- sub_training[sample(nrow(sub_training), 2000), ]
sub_testing <- testing[,grep("^classe|X|gyros|accel.*",names(testing))]
library(caret)
train_control <- trainControl(method="cv", number=3)
model <- train(classe~., data=sub_training, trControl=train_control, method="rf")
model
library(rattle)
install.packages("rattle")
install.packages("rattle")
library(rattle)
install.packages("rattle")
library(rattle)
?rattle
fancyRpartPlot(model)
library(caret)
library(rattle)
train_control <- trainControl(method="cv", number=3)
model <- train(classe~., data=sub_training, trControl=train_control, method="rpart")
fancyRpartPlot(model)
fancyRpartPlot(model$finalModel)
?X11Fonts
knitr::opts_chunk$set(echo = TRUE)
if (!file.exists("pml-training.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
dest="pml-training.csv", mode="wb")
}
if (!file.exists("pml-testing.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
dest="pml-testing.csv", mode="wb")
}
set.seed(1969)
training <- read.csv('pml-training.csv')
testing <- read.csv('pml-testing.csv')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
for(i in 1:ncol(training)){
if (class(training[,i])!="factor") {
training[is.na(training[,i]), i] <- mean(training[,i], na.rm = TRUE)
} else {
training[is.na(training[,i]), i] <- Mode(training[,i])
}
}
for(i in 1:ncol(testing)){
if (class(testing[,i])!="factor") {
testing[is.na(testing[,i]), i] <- mean(testing[,i], na.rm = TRUE)
} else {
testing[is.na(testing[,i]), i] <- Mode(testing[,i])
}
}
sub_training <- training[,grep("^classe|X|gyros|accel.*",names(training))]
sub_training <- sub_training[sample(nrow(sub_training), 2000), ]
sub_testing <- testing[,grep("^classe|X|gyros|accel.*",names(testing))]
library(caret)
library(rattle)
train_control <- trainControl(method="cv", number=3)
model <- train(classe~., data=sub_training, trControl=train_control, method="rpart")
fancyRpartPlot(model$finalModel)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(caret)
library(rattle)
train_control <- trainControl(method="cv", number=3)
model1 <- train(classe~., data=sub_training, trControl=train_control, method="rpart")
fancyRpartPlot(model1$finalModel)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
if (!file.exists("pml-training.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
dest="pml-training.csv", mode="wb")
}
if (!file.exists("pml-testing.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
dest="pml-testing.csv", mode="wb")
}
set.seed(1969)
training <- read.csv('pml-training.csv')
testing <- read.csv('pml-testing.csv')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
for(i in 1:ncol(training)){
if (class(training[,i])!="factor") {
training[is.na(training[,i]), i] <- mean(training[,i], na.rm = TRUE)
} else {
training[is.na(training[,i]), i] <- Mode(training[,i])
}
}
for(i in 1:ncol(testing)){
if (class(testing[,i])!="factor") {
testing[is.na(testing[,i]), i] <- mean(testing[,i], na.rm = TRUE)
} else {
testing[is.na(testing[,i]), i] <- Mode(testing[,i])
}
}
sub_training <- training[,grep("^classe|X|gyros|accel.*",names(training))]
sub_testing <- testing[,grep("^classe|X|gyros|accel.*",names(testing))]
library(caret)
library(rattle)
train_control <- trainControl(method="cv", number=4)
model1 <- train(classe~., data=sub_training, trControl=train_control, method="rpart")
fancyRpartPlot(model1$finalModel)
model2 <- train(classe~., data=sub_training, metric=metric, trControl=train_control, method="gbm")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
if (!file.exists("pml-training.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
dest="pml-training.csv", mode="wb")
}
if (!file.exists("pml-testing.csv")) {
library(downloader)
download("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
dest="pml-testing.csv", mode="wb")
}
set.seed(1969)
training <- read.csv('pml-training.csv')
testing <- read.csv('pml-testing.csv')
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
for(i in 1:ncol(training)){
if (class(training[,i])!="factor") {
training[is.na(training[,i]), i] <- mean(training[,i], na.rm = TRUE)
} else {
training[is.na(training[,i]), i] <- Mode(training[,i])
}
}
for(i in 1:ncol(testing)){
if (class(testing[,i])!="factor") {
testing[is.na(testing[,i]), i] <- mean(testing[,i], na.rm = TRUE)
} else {
testing[is.na(testing[,i]), i] <- Mode(testing[,i])
}
}
sub_training <- training[,grep("^classe|X|gyros|accel.*",names(training))]
sub_testing <- testing[,grep("^classe|X|gyros|accel.*",names(testing))]
library(caret)
library(rattle)
train_control <- trainControl(method="cv", number=4)
model1 <- train(classe~., data=sub_training, trControl=train_control, method="rpart")
fancyRpartPlot(model1$finalModel)
model2 <- train(classe~., data=sub_training, trControl=train_control, method="gbm")
